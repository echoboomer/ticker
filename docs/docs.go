// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Scott Hawkins",
            "email": "scott@echoboomer.net"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Return health status if the application is running.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Return health status if the application is running.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.JSONHealthResponse"
                        }
                    }
                }
            }
        },
        "/stock": {
            "get": {
                "description": "Retrieve information about a given stock symbol parsed as env SYMBOL with full response data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getStock"
                ],
                "summary": "Retrieve information about a given stock symbol parsed as env SYMBOL with full response data.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/stocks.StockDataResponseItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.JSONFailureResponse"
                        }
                    }
                }
            }
        },
        "/stock/avg": {
            "get": {
                "description": "Retrieve information about a given stock symbol parsed as env SYMBOL over days NDAYS. Returns a list of matched items and average close price.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getStockAvg"
                ],
                "summary": "Retrieve information about a given stock symbol parsed as env SYMBOL over days NDAYS.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stocks.StockDataResponseScoped"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.JSONFailureResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.JSONFailureResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "api err"
                },
                "result": {
                    "type": "string",
                    "example": "failure"
                }
            }
        },
        "api.JSONHealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "status"
                }
            }
        },
        "stocks.StockDataResponseItem": {
            "type": "object",
            "properties": {
                "1. open": {
                    "type": "string",
                    "example": "279.0800"
                },
                "2. high": {
                    "type": "string",
                    "example": "280.3400"
                },
                "3. low": {
                    "type": "string",
                    "example": "267.9800"
                },
                "4. close": {
                    "type": "string",
                    "example": "268.0900"
                },
                "5. volume": {
                    "type": "string",
                    "example": "27549307"
                }
            }
        },
        "stocks.StockDataResponseScoped": {
            "type": "object",
            "properties": {
                "average_close_price": {
                    "type": "number"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/stocks.StockDataResponseItem"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "ticker API",
	Description:      "An API that takes a stock SYMBOL and days as NDAYS and returns information about the stock.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
